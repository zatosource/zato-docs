.. warning::
   You are browsing an old version of the documentation. The newest one is `here </docs/3.1>`_ .


.. highlight:: python
   :linenothreshold: 1

Outgoing connections
====================

.. image:: /gfx/progguide-outconn.png
   :align: center

Each service can automatically access external resources using a range of protocols
documented in subsequent chapters.

HTTP-based publish/subscribe offers another alternative to direct messaging between applications
and is :doc:`documented <../../pubsub/index>` separately.

Some of the protocols are synchronous while communicating over the rest is
performed asynchronously, in a fire-and-forget manner.

Note that you always need to take
:doc:`high-availability (HA) <../../admin/guide/ha>`
into account, particularly so
if you're using
:doc:`AMQP <./amqp>` or
:doc:`IBM MQ <./jms-wmq>`
outgoing connections.

=================================== ===========
Protocol                            Synchronous
=================================== ===========
:doc:`AMQP <./amqp>`                ---
:doc:`Cassandra CQL <./cassandra>`  Yes
:doc:`ElasticSearch <./es>`         Yes
:doc:`FTP <./ftp>`                  Yes
:doc:`HTTP <./http>`                Yes
:doc:`IMAP <./imap>`                Yes
:doc:`IBM MQ <./jms-wmq>` ---
:doc:`Odoo (OpenERP) <./odoo>`      Yes
:doc:`SMTP <./smtp>`                Yes
:doc:`Solr <./solr>`                Yes
:doc:`SQL <./sql>`                  Yes
:doc:`ZeroMQ <./zmq>`               ---
=================================== ===========

.. note::

  There's nothing preventing you from accessing external resources using
  other transfer protocols.

  You won't have any particular support for doing
  so from Zato but the platform itself doesn't disallow using any other means of
  communicating if you establish and maintain the connections yourself.

  Do keep
  in mind though that Zato servers use a gevent-based main loop so TCP connections
  should be created in pure-Python code, preferrably, rather than in C.
