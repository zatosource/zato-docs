.. warning::
   This document is for a version of Zato that is no longer supported. The newest one is `here </docs/>`_.


.. highlight:: python
   :linenothreshold: 1

SMTP connections
================

Overview
--------

Synchronously sends messages to SMTP servers.

The underlying client SMTP library is `outbox <https://github.com/martinrusev/imbox>`_ wrapped in a set of Zato classes.

API
---

.. _progguide-outconn-email-smtp-get:

self.email.smtp.get
```````````````````

.. py:method:: get(name):

  Fetches an object whose .conn attribute represents a connection to an SMTP server.

  The object's .send method can be used to send emails using `zato.common.SMTPMessage <https://github.com/zatosource/zato/blob/support/2.0/code/zato-common/src/zato/common/__init__.py#L901>`_
  objects.

  :param name: Name of the :doc:`SMTP connection <../../web-admin/email/smtp>` connection to use
  :type name: string

Usage example
-------------

::

        from zato.common import SMTPMessage
        from zato.server.service import Service

        class MyService(Service):
            def handle(self):

                # Obtain a connection
                conn = self.email.smtp.get('My Connection').conn

                # Create an HTML email with attachments
                msg = SMTPMessage()
                msg.subject = 'Hello'
                msg.to = 'hello@invalid'
                msg.from_ = 'hello@invalid'
                msg.body = '<b>Hello, here are the attachments</b>'
                msg.is_html = True

                # Attachment 1
                msg.attach('attachment1.txt', '{"hi":"there"}')

                # Attachment 2
                msg.attach('attachment2.txt', '<hello>howdy</hello>')

                # Send the message
                conn.send(msg)
