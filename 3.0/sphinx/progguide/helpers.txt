.. warning::
   This document is for a version of Zato that is no longer supported. The newest one is `here </docs/>`_.


.. highlight:: python
   :linenothreshold: 1

Helper services
===============

`zato.server.service.internal.helpers <https://github.com/zatosource/zato/blob/support/2.0/code/zato-server/src/zato/server/service/internal/helpers.py>`_
contains a set of helper services coming in handy during development and documented below.

The services can be used either standalone or as base classes for user-defined ones.

Echo
----

Echos 1:1 everything received on input. Usage idea - mounting on :doc:`an HTTP channel <../web-admin/channels/plain-http>`
secured with credentials that need to be confirmed. If correct, response will be equal to request.

InputLogger
-----------

Sends to
:ref:`server.log <admin-guide-config-server-logging>`,
or stdout if
:ref:`running in foreground <progguide-debugging-run-in-fg>`,
the request received along with metadata. Usage idea -
mounting on :doc:`an HTTP channel <../web-admin/channels/plain-http>` to make sure a client application actually sends
everything that is required.

SIOInputLogger
--------------

Similar to InputLogger but logs :doc:`SimpleIO <./sio>` input only. Usage idea - as with InputLogger but here a service
would need to subclass or mix in SIOInputLogger instead of mounting it directly on a channel.

HTMLService
-----------

Produces HTML output - described in :doc:`its own chapter <./html>`.
