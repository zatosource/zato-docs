.. warning::
   This document is for a version of Zato that is no longer supported. The newest one is `here </docs/>`_.


zato.outgoing.zmq.create
========================

Overview
--------

Allows one to create a ZeroMQ outgoing connection.

  * List response: No
  * SOAP action: zato.outgoing.zmq.create
  * SOAP URL path: /zato/soap
  * JSON URL path: /zato/json/zato.outgoing.zmq.create
  * WSDL: :download:`Click here</public-api/zato.wsdl>`

Request parameters
------------------

================ ======== ======== ==================================================================================================================================================
Name             Datatype Optional Notes
================ ======== ======== ==================================================================================================================================================
cluster_id       int      ---      ID of the cluster this outgoing connection should be created in
name             string   ---      Name of the outgoing connection to create
is_active        boolean  ---      Whether the outgoing connection should be active upon its creation. If true, the underlying socket will be started immediately after its creation.
address          string   ---      ZeroMQ address to connect to
socket_type      string   ---      Socket type, must be equal to 'PUSH'
================ ======== ======== ==================================================================================================================================================
            

Response parameters
-------------------

==== ======== ======== ====================================================
Name Datatype Optional Notes
==== ======== ======== ====================================================
id   int      ---      ID assigned to the newly created outgoing connection
name string   ---      Copied over from request
==== ======== ======== ====================================================

SOAP example
------------

.. code-block:: xml

   <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"
        xmlns:zato="https://zato.io/ns/20130518">
      <soapenv:Body>
         <zato:zato_outgoing_zmq_create_request>
            <zato:cluster_id>1</zato:cluster_id>
            <zato:name>crm.account</zato:name>
            <zato:is_active>true</zato:is_active>
            <zato:address>tcp://localhost:5555</zato:address>
            <zato:socket_type>PUSH</zato:socket_type>
         </zato:zato_outgoing_zmq_create_request>
      </soapenv:Body>
   </soapenv:Envelope>
      
   <soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" 
      xmlns="https://zato.io/ns/20130518">
   <soap:Body>
       <zato_outgoing_zmq_create_response xmlns="https://zato.io/ns/20130518">
       <zato_env>
           <cid>K020895086206482643518459311344508016629</cid>
           <result>ZATO_OK</result>
       </zato_env>
       <item>
           <id>2</id>
           <name>crm.account</name>
       </item>
   </zato_outgoing_zmq_create_response>
   </soap:Body>
   </soap:Envelope>

JSON example
------------

.. code-block:: javascript

   {
      "cluster_id": 1,
      "name": "crm.account3",
      "is_active": true,
      "address": "tcp://localhost:5555",
      "socket_type": "PUSH"
   }

   {
     "zato_outgoing_zmq_create_response": {
       "id": 5,
       "name": "crm.account3"
     },
     "zato_env": {
       "details": "",
       "result": "ZATO_OK",
       "cid": "K020895086206482643518459311344508016629"
     }
   }
