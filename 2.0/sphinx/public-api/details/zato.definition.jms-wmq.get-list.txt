.. warning::
   This document is for a version of Zato that is no longer supported. The newest one is `here </docs/>`_.


zato.definition.jms-wmq.get-list
================================

Overview
--------

Returns a list of JMS WebSphere MQ connection definition on a given cluster.

  * List response: No
  * SOAP action: zato.definition.jms-wmq.get-list
  * SOAP URL path: /zato/soap
  * JSON URL path: /zato/json/zato.definition.jms-wmq.get-list
  * WSDL: :download:`Click here</public-api/zato.wsdl>`

Request parameters
------------------

========== ======== ======== ==========================================
Name       Datatype Optional Notes
========== ======== ======== ==========================================
cluster_id int      ---      ID of the cluster this definition lives on
========== ======== ======== ==========================================
            

Response parameters
-------------------

========================= ======== ======== ==================================================================================================================================================
Name                      Datatype Optional Notes
========================= ======== ======== ==================================================================================================================================================
id                        int      ---      ID of the definition
name                      string   ---      Name of the definition
host                      string   ---      Visit `Spring Python docs <http://static.springsource.org/spring-python/1.2.x/sphinx/html/jms.html#webspheremqconnectionfactory>`_ for description
port                      int      ---      〃
queue_manager             string   ---      〃
channel                   string   ---      〃
cache_open_send_queues    boolean  ---      〃
cache_open_receive_queues boolean  ---      〃
use_shared_connections    boolean  ---      〃
ssl                       boolean  ---      〃
needs_mcd                 boolean  ---      〃
max_chars_printed         int      ---      〃
ssl_cipher_spec           string   Yes      〃
ssl_key_repository        string   Yes      〃
========================= ======== ======== ==================================================================================================================================================


SOAP example
------------

.. code-block:: xml

    <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"
         xmlns:zato="https://zato.io/ns/20130518">
       <soapenv:Body>
          <zato:zato_definition_jms_wmq_get_list_request>
             <zato:cluster_id>1</zato:cluster_id>
          </zato:zato_definition_jms_wmq_get_list_request>
       </soapenv:Body>
    </soapenv:Envelope>
      
    <soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" 
        xmlns="https://zato.io/ns/20130518">
    <soap:Body>
        <zato_definition_jms_wmq_get_list_response xmlns="https://zato.io/ns/20130518">
        <zato_env>
            <cid>K081124888496773002159504742449784167137</cid>
            <result>ZATO_OK</result>
        </zato_env>
        <item_list xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <item>
            <id>5</id>
            <name>MQPORTAL4</name>
            <host>127.0.0.1</host>
            <port>1414</port>
            <queue_manager>QM01</queue_manager>
            <channel>ESB.PORTAL.1</channel>
            <cache_open_send_queues>true</cache_open_send_queues>
            <cache_open_receive_queues>true</cache_open_receive_queues>
            <use_shared_connections>true</use_shared_connections>
            <ssl>true</ssl>
            <needs_mcd>false</needs_mcd>
            <max_chars_printed>200</max_chars_printed>
            <ssl_cipher_spec>TLS_RSA_WITH_AES_256_CBC_SHA256</ssl_cipher_spec>
            <ssl_key_repository>/opt/zato/sslrepo</ssl_key_repository>
        </item>
        <item>
            <id>3</id>
            <name>MQPORTAL5</name>
            <host>127.0.0.1</host>
            <port>1414</port>
            <queue_manager>QM01</queue_manager>
            <channel>ESB.PORTAL.3</channel>
            <cache_open_send_queues>true</cache_open_send_queues>
            <cache_open_receive_queues>true</cache_open_receive_queues>
            <use_shared_connections>true</use_shared_connections>
            <ssl>false</ssl>
            <needs_mcd>false</needs_mcd>
            <max_chars_printed>200</max_chars_printed>
            <ssl_cipher_spec xsi:nil="true"/>
            <ssl_key_repository xsi:nil="true"/>
        </item>
        </item_list>
        </zato_definition_jms_wmq_get_list_response>
    </soap:Body>
    </soap:Envelope>

JSON example
------------

.. code-block:: javascript

    {
      "cluster_id": 1
    }

    {
      "zato_env": {
        "details": "",
        "result": "ZATO_OK",
        "cid": "K081124888496773002159504742449784167137"
      },
      "zato_definition_jms_wmq_get_list_response": [
        {
          "cache_open_send_queues": true,
          "name": "MQPORTAL4",
          "ssl_cipher_spec": "TLS_RSA_WITH_AES_256_CBC_SHA256",
          "max_chars_printed": 200,
          "id": 5,
          "ssl": true,
          "host": "127.0.0.1",
          "needs_mcd": false,
          "use_shared_connections": true,
          "queue_manager": "QM01",
          "ssl_key_repository": "/opt/zato/sslrepo",
          "cache_open_receive_queues": true,
          "port": 1414,
          "channel": "ESB.PORTAL.1"
        },
        {
          "cache_open_send_queues": true,
          "name": "MQPORTAL5",
          "ssl_cipher_spec": null,
          "max_chars_printed": 200,
          "id": 3,
          "ssl": false,
          "host": "127.0.0.1",
          "needs_mcd": false,
          "use_shared_connections": true,
          "queue_manager": "QM01",
          "ssl_key_repository": null,
          "cache_open_receive_queues": true,
          "port": 1414,
          "channel": "ESB.PORTAL.3"
        }
      ]
    }
