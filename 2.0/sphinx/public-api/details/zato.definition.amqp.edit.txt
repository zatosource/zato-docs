.. warning::
   This document is for a version of Zato that is no longer supported. The newest one is `here </docs/>`_.


zato.definition.amqp.edit
=========================

Overview
--------

Updates an AMQP connection definition. A connection definition holds information
on how to connect to a particular AMQP broker. Any channels using this definition
will be restarted with new values.

.. note::

  Use :doc:`zato.definition.amqp.change-password<./zato.definition.amqp.change-password>`
  to change its password.

  * List response: No
  * SOAP action: zato.definition.amqp.edit
  * SOAP URL path: /zato/soap
  * JSON URL path: /zato/json/zato.definition.amqp.edit
  * WSDL: :download:`Click here</public-api/zato.wsdl>`

Request parameters
------------------

========== ======== ======== ====================================================
Name       Datatype Optional Notes
========== ======== ======== ====================================================
id         int      ---      ID of the definition
cluster_id int      ---      ID of the cluster this definition lives on
name       string   ---      Name of the definition
host       string   ---      AMQP broker host
port       int      ---      AMQP broker TCP port
vhost      string   ---      AMQP virtual host
username   string   ---      Username to connect with
frame_max  int      ---      Maximum frame size, in bytes
heartbeat  int      ---      How often heartbeats should be exchanged, in seconds
========== ======== ======== ====================================================
            

Response parameters
-------------------

==== ======== ======== ========================
Name Datatype Optional Notes
==== ======== ======== ========================
id   int      ---      Copied over from request
name string   ---      Copied over from request
==== ======== ======== ========================

SOAP example
------------

.. code-block:: xml

      <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"
           xmlns:zato="https://zato.io/ns/20130518">
         <soapenv:Body>
            <zato:zato_definition_amqp_edit_request>
               <zato:id>1</zato:id>
               <zato:cluster_id>1</zato:cluster_id>
               <zato:name>PORTAL1</zato:name>
               <zato:host>127.0.0.1</zato:host>
               <zato:port>5672</zato:port>
               <zato:vhost>/zato1</zato:vhost>
               <zato:username>zato1</zato:username>
               <zato:frame_max>131072</zato:frame_max>
               <zato:heartbeat>10</zato:heartbeat>
            </zato:zato_definition_amqp_edit_request>
         </soapenv:Body>
      </soapenv:Envelope>
      
      <soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" 
          xmlns="https://zato.io/ns/20130518">
          <soap:Body>
              <zato_definition_amqp_edit_response xmlns="https://zato.io/ns/20130518">
                  <zato_env>
                      <cid>K161519258842395102922699297748581636281</cid>
                      <result>ZATO_OK</result>
                  </zato_env>
                  <item>
                      <id>1</id>
                      <name>PORTAL1</name>
                  </item>
              </zato_definition_amqp_edit_response>
          </soap:Body>
      </soap:Envelope> 

JSON example
------------

.. code-block:: javascript

    {
        "id": 1,
        "cluster_id": 1,
        "name": "PORTAL1",
        "host": "127.0.0.1",
        "port": "5672",
        "vhost": "/zato1",
        "username": "zato1",
        "frame_max": 131072,
        "heartbeat": 10
    }

    {
      "zato_env": {
        "details": "",
        "result": "ZATO_OK",
        "cid": "K161519258842395102922699297748581636281"
      },
      "zato_definition_amqp_edit_response": {
        "id": 1,
        "name": "PORTAL1"
      }
    }
