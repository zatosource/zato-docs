.. warning::
   You are browsing an old version of the documentation. The newest one is `here </docs/3.1>`_ .


zato.stats.get-summary-by-month
===============================

Overview
--------

Returns a list of summaries of statistics across all services for a given month.

The list will be sorted by the field n_type has a value of.


* List response: Yes
* SOAP action: zato.stats.get-summary-by-month
* SOAP URL path: /zato/soap
* JSON URL path: /zato/json/zato.stats.get-summary-by-month
* WSDL: :download:`Click here</public-api/zato.wsdl>`

Request parameters
------------------

====== ======== ======== ==============================================================================================
Name   Datatype Optional Notes
====== ======== ======== ==============================================================================================
start  date     ---      Start date. This can be any date and Zato will figure out when the first day of the month was.
n      int      ---      Same as for :doc:`zato.stats.get-summary-by-range <zato.stats.get-summary-by-range>`
n_type int      ---      〃
====== ======== ======== ==============================================================================================
            

Response parameters
-------------------

======================= ======== ======== ====================================================================================
Name                    Datatype Optional Notes
======================= ======== ======== ====================================================================================
service_name            string   ---      Same as for :doc:`zato.stats.get-summary-by-range <zato.stats.get-summary-by-range>`
usage                   long     ---      〃
rate                    float    ---      〃
time                    double   ---      〃
min_resp_time           float    ---      〃
max_resp_time           float    ---      〃
all_services_usage      long     ---      〃
all_services_time       double   ---      〃
mean_all_services       float    ---      〃
usage_perc_all_services float    ---      〃
time_perc_all_services  float    ---      〃
======================= ======== ======== ====================================================================================


SOAP example
------------

.. code-block:: xml

   <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"
        xmlns:zato="https://zato.io/ns/20130518">
      <soapenv:Body>
         <zato:zato_stats_get_summary_by_month_request>
            <zato:start>2013-02-27</zato:start>
            <zato:n>3</zato:n>
            <zato:n_type>usage</zato:n_type>
         </zato:zato_stats_get_summary_by_month_request>
      </soapenv:Body>
   </soapenv:Envelope>
      
  <soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"
    xmlns="https://zato.io/ns/20130518">
  <soap:Body>
      <zato_stats_get_summary_by_month_response xmlns="https://zato.io/ns/20130518">
      <zato_env>
          <cid>K024453662439765321860120694293518400939</cid>
          <result>ZATO_OK</result>
      </zato_env>
      <item_list>
          <item>
              <service_name>zato.server.cluster-wide-singleton-keep-alive</service_name>
              <usage>1835</usage>
              <mean>35.0</mean>
              <rate>0.01</rate>
              <time>64702.1</time>
              <usage_trend/>
              <mean_trend/>
              <min_resp_time>21.0</min_resp_time>
              <max_resp_time>481.0</max_resp_time>
              <all_services_usage>3902</all_services_usage>
              <all_services_time>219736</all_services_time>
              <mean_all_services>79</mean_all_services>
              <usage_perc_all_services>47.03</usage_perc_all_services>
              <time_perc_all_services>29.45</time_perc_all_services>
          </item>
          <item>
              <service_name>zato.stats.aggregate-by-minute</service_name>
              <usage>931</usage>
              <mean>13.0</mean>
              <rate>0.01</rate>
              <time>12456.78</time>
              <usage_trend/>
              <mean_trend/>
              <min_resp_time>2.0</min_resp_time>
              <max_resp_time>64.0</max_resp_time>
              <all_services_usage>3902</all_services_usage>
              <all_services_time>219736</all_services_time>
              <mean_all_services>79</mean_all_services>
              <usage_perc_all_services>23.86</usage_perc_all_services>
              <time_perc_all_services>5.67</time_perc_all_services>
          </item>
          <item>
              <service_name>zato.stats.process-raw-times</service_name>
              <usage>619</usage>
              <mean>19.0</mean>
              <rate>0.0</rate>
              <time>12126.21</time>
              <usage_trend/>
              <mean_trend/>
              <min_resp_time>6.0</min_resp_time>
              <max_resp_time>463.0</max_resp_time>
              <all_services_usage>3902</all_services_usage>
              <all_services_time>219736</all_services_time>
              <mean_all_services>79</mean_all_services>
              <usage_perc_all_services>15.86</usage_perc_all_services>
              <time_perc_all_services>5.52</time_perc_all_services>
          </item>
      </item_list>
  </zato_stats_get_summary_by_month_response>
  </soap:Body>
  </soap:Envelope>

JSON example
------------

.. code-block:: javascript

  {
     "start": "2013-02-27",
     "n": 3,
     "n_type": "usage"
  }

  {
    "zato_env": {
      "details": "",
      "result": "ZATO_OK",
      "cid": "K024453662439765321860120694293518400939"
    },
    "zato_stats_get_summary_by_month_response": [
      {
        "usage_perc_all_services": 47.03,
        "all_services_time": 219736,
        "time_perc_all_services": 29.45,
        "mean_trend": "",
        "min_resp_time": 21,
        "service_name": "zato.server.cluster-wide-singleton-keep-alive",
        "max_resp_time": 481,
        "rate": 0.01,
        "mean_all_services": "79",
        "all_services_usage": 3902,
        "time": 64702.1,
        "usage": 1835,
        "usage_trend": "",
        "mean": 35
      },
      {
        "usage_perc_all_services": 23.86,
        "all_services_time": 219736,
        "time_perc_all_services": 5.67,
        "mean_trend": "",
        "min_resp_time": 2,
        "service_name": "zato.stats.aggregate-by-minute",
        "max_resp_time": 64,
        "rate": 0.01,
        "mean_all_services": "79",
        "all_services_usage": 3902,
        "time": 12456.78,
        "usage": 931,
        "usage_trend": "",
        "mean": 13
      },
      {
        "usage_perc_all_services": 15.86,
        "all_services_time": 219736,
        "time_perc_all_services": 5.52,
        "mean_trend": "",
        "min_resp_time": 6,
        "service_name": "zato.stats.process-raw-times",
        "max_resp_time": 463,
        "rate": 0,
        "mean_all_services": "79",
        "all_services_usage": 3902,
        "time": 12126.21,
        "usage": 619,
        "usage_trend": "",
        "mean": 19
      }
    ]
  }
