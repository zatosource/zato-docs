.. warning::
   This document is for a version of Zato that is no longer supported. The newest one is `here </docs/>`_.


zato.security.wss.get-list
==========================

Overview
--------

Returns a list of WS-Security definitions configured on a given cluster.

* List response: Yes
* SOAP action: zato.security.wss.get-list
* SOAP URL path: /zato/soap
* JSON URL path: /zato/json/zato.security.wss.get-list
* WSDL: :download:`Click here</public-api/zato.wsdl>`

Request parameters
------------------

========== ========= ======== ==================================
Name       Datatype  Optional Notes
========== ========= ======== ==================================
cluster_id int       ---      Cluster to return definitions from
========== ========= ======== ==================================
            

Response parameters
-------------------

======================== ======== ======== ===================================================================
Name                     Datatype Optional Notes
======================== ======== ======== ===================================================================
id                       int      ---      Definition ID
name                     string   ---      Definition name
is_active                boolean  ---      Whether the definition is active
username                 string   ---      Username
password_type            string   ---      Same as for :doc:`zato.security.get-list<./zato.security.get-list>`
reject_empty_nonce_creat boolean  ---      〃
reject_stale_tokens      boolean  ---      〃
reject_expiry_limit      boolean  ---      〃
nonce_freshness_time     int      ---      〃
======================== ======== ======== ===================================================================

SOAP example
------------

.. code-block:: xml

    <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"
         xmlns:zato="https://zato.io/ns/20130518">
       <soapenv:Body>
          <zato:zato_security_wss_get_list_request>
             <zato:cluster_id>1</zato:cluster_id>
          </zato:zato_security_wss_get_list_request>
       </soapenv:Body>
    </soapenv:Envelope>
      
    <soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" 
      xmlns="https://zato.io/ns/20130518">
    <soap:Body>
        <zato_security_wss_get_list_response xmlns="https://zato.io/ns/20130518">
        <zato_env>
            <cid>K030103540629066946481148025972976549488</cid>
            <result>ZATO_OK</result>
        </zato_env>
        <item_list>
            <item>
                <id>5</id>
                <name>zato.ping.soap.wss.clear_text</name>
                <is_active>true</is_active>
                <password_type>clear_text</password_type>
                <username>zato.ping.soap.wss.clear_text</username>
                <reject_empty_nonce_creat>false</reject_empty_nonce_creat>
                <reject_stale_tokens>true</reject_stale_tokens>
                <reject_expiry_limit>3600</reject_expiry_limit>
                <nonce_freshness_time>3600</nonce_freshness_time>
            </item>
        </item_list>
    </zato_security_wss_get_list_response>
    </soap:Body>
    </soap:Envelope>


JSON example
------------

.. code-block:: javascript

    {
     "cluster_id": 1
    }

    {
      "zato_env": {
        "details": "",
        "result": "ZATO_OK",
        "cid": "K030103540629066946481148025972976549488"
      },
      "zato_security_wss_get_list_response": [
        {
          "username": "zato.ping.soap.wss.clear_text",
          "name": "zato.ping.soap.wss.clear_text",
          "nonce_freshness_time": 3600,
          "is_active": true,
          "id": 5,
          "reject_expiry_limit": 3600,
          "password_type": "clear_text",
          "reject_empty_nonce_creat": false,
          "reject_stale_tokens": true
        }
      ]
    }
