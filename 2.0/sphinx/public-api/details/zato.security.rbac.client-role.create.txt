.. warning::
   This document is for a version of Zato that is no longer supported. The newest one is `here </docs/>`_.


zato.security.rbac.client-role.create
=====================================

Overview
--------

Creates an association between a security definition and an RBAC role.

  * List response: No
  * SOAP action: zato.security.rbac.client-role.create
  * SOAP URL path: /zato/soap
  * JSON URL path: /zato/json/zato.security.rbac.client-role.create
  * WSDL: :download:`Click here</public-api/zato.wsdl>`

Request parameters
------------------

=================== ======== ======== ============================================================================================================================================
Name                Datatype Optional Notes
=================== ======== ======== ============================================================================================================================================
cluster_id          int      ---      ID of the cluster the operation should be performed in
role_id             int      ---      ID of the role to use
client_def          string   ---      Security definition to use in the format of 'sec_def:::SEC_TYPE:::SEC_NAME' where

                                      * sec_def  - constant string
                                      * SEC_TYPE - one of `zato.common.SEC_DEF_TYPE <https://github.com/zatosource/zato/blob/support/2.0/code/zato-common/src/zato/common/__init__.py>`_
                                      * SEC_NAME - name of the security definition to associate with the role
=================== ======== ======== ============================================================================================================================================


Response parameters
-------------------

==== ======== ======== =================================================
Name Datatype Optional Notes
==== ======== ======== =================================================
id   int      ---      ID assigned to the newly created association
==== ======== ======== =================================================

SOAP example
------------

.. code-block:: xml

   <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"
        xmlns:zato="https://zato.io/ns/20130518">
      <soapenv:Body>
         <zato:zato_security_rbac_client_role_create_request>
            <zato:cluster_id>1</zato:cluster_id>
            <zato:role_id>2</zato:role_id>
            <zato:client_def>sec_def:::basic_auth:::my.username</zato:client_def>
         </zato:zato_security_rbac_client_role_create_request>
      </soapenv:Body>
   </soapenv:Envelope>

   <soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"
         xmlns="https://zato.io/ns/20130518">
      <soap:Body>
            <zato_security_rbac_client_role_create_response xmlns="https://zato.io/ns/20130518">
               <zato_env>
                  <cid>K079537614313001856490892948474114718602</cid>
                  <result>ZATO_OK</result>
               </zato_env>
               <item>
                  <id>1</id>
               </item>
            </zato_security_rbac_client_role_create_response>
      </soap:Body>
   </soap:Envelope> 

JSON example
------------

.. code-block:: javascript

   {
       "cluster_id": 1,
       "role_id": 2,
       "client_def": "sec_def:::basic_auth:::my.username"
   }

   {
     "zato_env": {
       "details": "",
       "result": "ZATO_OK",
       "cid": "K079537614313001856490892948474114718602"
     },
     "zato_security_rbac_client_role_create_response": {
       "id": "2"
     }
   }
