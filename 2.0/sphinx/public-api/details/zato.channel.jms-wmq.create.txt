.. warning::
   This document is for a version of Zato that is no longer supported. The newest one is `here </docs/>`_.


zato.channel.jms-wmq.create
===========================

Overview
--------

Allows one to create a JMS WebSphere MQ channel basing on
:doc:`an already existing JMS WebSphere MQ connection definition</public-api/details/zato.definition.jms-wmq>`.

  * List response: No
  * SOAP action: zato.channel.jms-wmq.create
  * SOAP URL path: /zato/soap
  * JSON URL path: /zato/json/zato.channel.jms-wmq.create
  * WSDL: :download:`Click here</public-api/zato.wsdl>`

Request parameters
------------------

=========== ======== ======== =============================================================================================================================================================
Name        Datatype Optional Notes
=========== ======== ======== =============================================================================================================================================================
cluster_id  int      ---      ID of the cluster this channel should be created in
name        string   ---      Name of the channel to create
is_active   boolean  ---      Whether the channel should be active upon its creation. If true, the channel will be started immediately after its creation.
def_id      int      ---      ID of :doc:`an already existing JMS WebSphere MQ connection definition</public-api/details/zato.definition.jms-wmq>` to use for connecting to a queue manager
queue       string   ---      Name of the queue to read messages off
service     string   ---      Name of an already existing service to invoke upon reading each message from the queue
data_format string   Yes      Expected data format. If given, should be either 'xml' or 'json'.
=========== ======== ======== =============================================================================================================================================================
            

Response parameters
-------------------

==== ======== ======== ========================================
Name Datatype Optional Notes
==== ======== ======== ========================================
id   int      ---      ID assigned to the newly created channel
name string   ---      Copied over from request
==== ======== ======== ========================================

SOAP example
------------

.. code-block:: xml

   <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"
        xmlns:zato="https://zato.io/ns/20130518">
      <soapenv:Body>
         <zato:zato_channel_jms_wmq_create_request>
            <zato:cluster_id>1</zato:cluster_id>
            <zato:name>ivr.client.37</zato:name>
            <zato:is_active>true</zato:is_active>
            <zato:def_id>3</zato:def_id>
            <zato:queue>IVRAAZ9</zato:queue>
            <zato:service>myservice</zato:service>
            <zato:data_format>xml</zato:data_format>
         </zato:zato_channel_jms_wmq_create_request>
      </soapenv:Body>
   </soapenv:Envelope>
      
   <soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"
         xmlns="https://zato.io/ns/20130518">
      <soap:Body>
            <zato_channel_jms_wmq_create_response xmlns="https://zato.io/ns/20130518">
               <zato_env>
                  <cid>K218232842253305087880868751043295078534</cid>
                  <result>ZATO_OK</result>
               </zato_env>
               <item>
                  <id>3</id>
                  <name>ivr.client.37</name>
               </item>
            </zato_channel_jms_wmq_create_response>
      </soap:Body>
   </soap:Envelope> 

JSON example
------------

.. code-block:: javascript

   {
       "cluster_id": 1,
       "name": "ivr.client.38",
       "is_active": true,
       "def_id": 1,
       "queue": "IVRAAZ9",
       "service": "myservice",
       "data_format": "xml"
   }

   {
     "zato_env": {
       "details": "",
       "result": "ZATO_OK",
       "cid": "K218232842253305087880868751043295078534"
     },
     "zato_channel_jms_wmq_create_response": {
       "id": 2,
       "name": "ivr.client.38"
     }
   }
