.. warning::
   You are browsing an old version of the documentation. The newest one is `here </docs/3.1>`_ .


zato.security.rbac.role-permission.create
=========================================

Overview
--------

Establishes an association between an RBAC role, permission and a service indicating that this role has a given permission
with regards to that very service.

  * List response: No
  * SOAP action: zato.security.rbac.role-permission.create
  * SOAP URL path: /zato/soap
  * JSON URL path: /zato/json/zato.security.rbac.role-permission.create
  * WSDL: :download:`Click here</public-api/zato.wsdl>`

Request parameters
------------------

=========== ======== ======== ======================================================
Name        Datatype Optional Notes
=========== ======== ======== ======================================================
cluster_id  int      ---      ID of the cluster the association should be defined in
role_id     int      ---      ID of the role to use
service_id  int      ---      ID of the service to grant permission to
perm_id     int      ---      ID of the permission to grant to the role 
=========== ======== ======== ======================================================


Response parameters
-------------------

====== ======== ======== ============================================================================================
Name   Datatype Optional Notes
====== ======== ======== ============================================================================================
name   string   ---      Name of the resulting association in the form of 'ROLE_NAME:::SERVICE_NAME:::PERMISSION_NAME
====== ======== ======== ============================================================================================

SOAP example
------------

.. code-block:: xml

   <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"
        xmlns:zato="https://zato.io/ns/20130518">
      <soapenv:Body>
         <zato:zato_security_rbac_role_permission_create_request>
            <zato:cluster_id><1/zato:cluster_id>
            <zato:role_id>2</zato:role_id>
            <zato:service_id>3</zato:service_id>
            <zato:perm_id>4</zato:perm_id>
         </zato:zato_security_rbac_role_permission_create_request>
      </soapenv:Body>
   </soapenv:Envelope>

   <soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"
         xmlns="https://zato.io/ns/20130518">
      <soap:Body>
            <zato_security_rbac_role_permission_create_response xmlns="https://zato.io/ns/20130518">
               <zato_env>
                  <cid>K079537614313001856490892948474114718602</cid>
                  <result>ZATO_OK</result>
               </zato_env>
               <item>
                  <zato:name>billing.readers:::my.api.get-billing:::Read</zato:name>
               </item>
            </zato_security_rbac_role_permission_create_response>
      </soap:Body>
   </soap:Envelope> 

JSON example
------------

.. code-block:: javascript

   {
       "cluster_id": 1,
       "role_id": 2,
       "service_id": 3,
       "perm_id": 4 
   }

   {
     "zato_env": {
       "details": "",
       "result": "ZATO_OK",
       "cid": "K079537614313001856490892948474114718602"
     },
     "zato_security_rbac_role_permission_create_response": {
       "name": "billing.readers:::my.api.get-billing:::Read"
     }
   }
