.. warning::
   You are browsing an old version of the documentation. The newest one is `here </docs/3.1>`_ .


zato.scheduler.job.execute
==========================

Overview
--------

Executes a scheduler's job by ID. The job's invocation doesn't count towards
its scheduled execution plan, e.g. it won't make it skip the next time it's
scheduled to run.

  * List response: No
  * SOAP action: zato.scheduler.job.execute
  * SOAP URL path: /zato/soap
  * JSON URL path: /zato/json/zato.scheduler.job.execute
  * WSDL: :download:`Click here</public-api/zato.wsdl>`

Request parameters
------------------

==== ======== ======== ========================
Name Datatype Optional Notes
==== ======== ======== ========================
id   int      ---      ID of the job to execute
==== ======== ======== ========================
            

Response parameters
-------------------

(None)

SOAP example
------------

.. code-block:: xml

    <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"
         xmlns:zato="https://zato.io/ns/20130518">
       <soapenv:Body>
          <zato:zato_scheduler_job_execute_request>
             <zato:id>847</zato:id>
          </zato:zato_scheduler_job_execute_request>
       </soapenv:Body>
    </soapenv:Envelope>
      
    <soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" 
        xmlns="https://zato.io/ns/20130518">
      <soap:Body>
        <zato_scheduler_job_execute_response xmlns="https://zato.io/ns/20130518">
          <zato_env>
            <cid>K162614168087675697212960768198906868717</cid>
            <result>ZATO_OK</result>
          </zato_env>
        </zato_scheduler_job_execute_response>
      </soap:Body>
    </soap:Envelope>

JSON example
------------

.. code-block:: javascript

   {
     "id": 847
   }

   {
     "zato_env": {
       "details": "",
       "result": "ZATO_OK",
       "cid": "K162614168087675697212960768198906868717"
     }
   }
