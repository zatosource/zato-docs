.. warning::
   This document is for a version of Zato that is no longer supported. The newest one is `here </docs/>`_.


zato.outgoing.sql.get-list
==========================

Overview
--------

Returns a list of outgoing SQL connections defined on a given cluster.

  * List response: Yes
  * SOAP action: zato.outgoing.sql.get-list
  * SOAP URL path: /zato/soap
  * JSON URL path: /zato/json/zato.outgoing.sql.get-list
  * WSDL: :download:`Click here</public-api/zato.wsdl>`

Request parameters
------------------

=========== ======== ======== ==========
Name        Datatype Optional Notes
=========== ======== ======== ==========
cluster_id  int      ---      Cluster ID
=========== ======== ======== ==========


Response parameters
-------------------

========== ======== ======== =======================================================================
Name       Datatype Optional Notes
========== ======== ======== =======================================================================
id         int      ---      Connection ID
name       string   ---      Same as for :doc:`zato.outgoing.sql.create<./zato.outgoing.sql.create>`
is_active  boolean  ---      〃
engine     string   ---      〃
host       string   ---      〃
port       int      ---      〃
db_name    string   ---      〃
username   string   ---      〃
pool_size  int      ---      〃
========== ======== ======== =======================================================================

SOAP example
------------

.. code-block:: xml

   <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"
        xmlns:zato="https://zato.io/ns/20130518">
      <soapenv:Body>
         <zato:zato_outgoing_sql_get_list_request>
            <zato:cluster_id>1</zato:cluster_id>
         </zato:zato_outgoing_sql_get_list_request>
      </soapenv:Body>
   </soapenv:Envelope>
      
  <soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" 
    xmlns="https://zato.io/ns/20130518">
  <soap:Body>
      <zato_outgoing_sql_get_list_response xmlns="https://zato.io/ns/20130518">
      <zato_env>
          <cid>K238785712888027640920852261054682634951</cid>
          <result>ZATO_OK</result>
      </zato_env>
      <item_list>
          <item>
              <id>1</id>
              <name>oraprod2</name>
              <is_active>true</is_active>
              <cluster_id>1</cluster_id>
              <engine>oracle</engine>
              <host>10.152.11.27</host>
              <port>1438</port>
              <db_name>ORAPROD2</db_name>
              <username>ZATO1</username>
              <pool_size>3</pool_size>
              <extra/>
          </item>
          <item>
              <id>2</id>
              <name>test-7</name>
              <is_active>true</is_active>
              <cluster_id>1</cluster_id>
              <engine>postgresql</engine>
              <host>localhost</host>
              <port>5433</port>
              <db_name>zatodb1</db_name>
              <username>zato1</username>
              <pool_size>2</pool_size>
              <extra/>
          </item>
      </item_list>
  </zato_outgoing_sql_get_list_response>
  </soap:Body>
  </soap:Envelope>

JSON example
------------

.. code-block:: javascript

  {
    "cluster_id": 1
  }

  {
    "zato_env": {
      "details": "",
      "result": "ZATO_OK",
      "cid": "K238785712888027640920852261054682634951"
    },
    "zato_outgoing_sql_get_list_response": [
      {
        "engine": "oracle",
        "username": "ZATO1",
        "name": "oraprod2",
        "extra": "",
        "is_active": true,
        "port": 1438,
        "host": "10.152.11.27",
        "db_name": "ORAPROD2",
        "cluster_id": 1,
        "pool_size": 3,
        "id": 1
      },
      {
        "engine": "postgresql",
        "username": "zato1",
        "name": "test-7",
        "extra": "",
        "is_active": true,
        "port": 5433,
        "host": "localhost",
        "db_name": "zatodb1",
        "cluster_id": 1,
        "pool_size": 2,
        "id": 2
      }
    ]
  }
