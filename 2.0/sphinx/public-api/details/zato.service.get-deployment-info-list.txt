.. warning::
   This document is for a version of Zato that is no longer supported. The newest one is `here </docs/>`_.


zato.service.get-deployment-info-list
=====================================

Overview
--------

Returns information regarding where, on what servers, a given service is deployed.

* List response: Yes
* SOAP action: zato.service.get-deployment-info-list
* SOAP URL path: /zato/soap
* JSON URL path: /zato/json/zato.service.get-deployment-info-list
* WSDL: :download:`Click here</public-api/zato.wsdl>`

Request parameters
------------------

==== ======== ======== ==========
Name Datatype Optional Notes
==== ======== ======== ==========
id   int      ---      Service ID
==== ======== ======== ==========
            

Response parameters
-------------------

=========== ======== ======== ===================================================================================================
Name        Datatype Optional Notes
=========== ======== ======== ===================================================================================================
server_id   int      ---      Server ID
server_name string   ---      Server name
details     string   ---      A JSON document describing details of the service's deployment on this particular server.
                              The fields returned are:
                              
                              * method - how was the service deployed, always 'service-store'
                              * object - name of a Python object representing the service
                              * timestamp - when was the service deployed
                              * fs_location - where in the file system the service is located, where its containing
                                Python module is
                              * remote_host - always an empty string
                              * remote_user - always an empty string
                              * current_host - host the server is running on, as returned by gethostname and getfqdn system calls
                              * current_user - an operating system's user the server is running under
=========== ======== ======== ===================================================================================================

SOAP example
------------

.. code-block:: xml

   <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"
        xmlns:zato="https://zato.io/ns/20130518">
      <soapenv:Body>
         <zato:zato_service_get_deployment_info_list_request>
            <zato:id>118</zato:id>
         </zato:zato_service_get_deployment_info_list_request>
      </soapenv:Body>
   </soapenv:Envelope>
      
    <soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="https://zato.io/ns/20130518">
    <soap:Body>
        <zato_service_get_deployment_info_list_response xmlns="https://zato.io/ns/20130518">
        <zato_env>
            <cid>K036572901992840303314423109559738732888</cid>
            <result>ZATO_OK</result>
        </zato_env>
        <item_list>
            <item>
                <server_id>1</server_id>
                <server_name>server1</server_name>
                <details>"{
    u'remote_user': u'', 
    u'current_host': u'prod1/prod1', 
    u'current_user': 'zato1', 
    u'timestamp': '2013-02-09T18:43:24.643533', 
    u'fs_location': '/opt/zato/code/zato-server/src/zato/server/service/internal/__init__.pyc', 
    u'object': &lt;class 'zato.server.service.internal.Ping'&gt;, 
    u'remote_host': u'', 
    u'method': u'service-store'}"
                </details>
            </item>
            <item>
                <server_id>2</server_id>
                <server_name>TEST3</server_name>
                <details>"{
    u'remote_user': u'', 
    u'current_host': u'prod1/prod1', 
    u'current_user': 'zato1', 
    u'timestamp': '2013-02-09T14:52:53.597542', 
    u'fs_location': '/opt/zato/code/zato-server/src/zato/server/service/internal/__init__.pyc', 
    u'object': &lt;class 'zato.server.service.internal.Ping'&gt;, 
    u'remote_host': u'', 
    u'method': u'service-store'}"
                </details>
            </item>
        </item_list>
    </zato_service_get_deployment_info_list_response>
    </soap:Body>
    </soap:Envelope>


JSON example
------------

.. code-block:: javascript

  {
    "id": 118
  }

  {
    "zato_env": {
      "details": "",
      "result": "ZATO_OK",
      "cid": "K036572901992840303314423109559738732888"
    },
    "zato_service_get_deployment_info_list_response": [
  {
    "server_id": 2,
    "details": "\"{u'remote_user': u'', 
     u'current_host': u'prod1/prod1', 
     u'current_user': 'zato1',
     u'timestamp': '2013-02-09T14:52:53.597542',
     u'fs_location': '/opt/zato/code/zato-server/src/zato/server/service/internal/__init__.pyc', 
     u'object': <class 'zato.server.service.internal.Ping'>, 
     u'remote_host': u'',
     u'method': u'ServiceStore'}\"",
    "server_name": "TEST3"
  },
      {
    "server_id": 1,
    "details": "\"{u'remote_user': u'', 
     u'current_host': u'prod1/prod1', 
     u'current_user': 'zato1', 
     u'timestamp': '2013-02-09T19:44:26.582203', 
     u'fs_location': '/opt/zato/code/zato-server/src/zato/server/service/internal/__init__.pyc', 
     u'object': <class 'zato.server.service.internal.Ping'>, 
     u'remote_host': u'', 
     u'method': u'service-store'}\"",
    "server_name": "server1"
      }
    ]
  }
