.. warning::
   This document is for a version of Zato that is no longer supported. The newest one is `here </docs/>`_.


zato.channel.jms-wmq.get-list
=============================

Overview
--------

Returns a list of JMS WebSphere MQ channels defined on a given cluster.

  * List response: Yes
  * SOAP action: zato.channel.jms-wmq.get-list
  * SOAP URL path: /zato/soap
  * JSON URL path: /zato/json/zato.channel.jms-wmq.get-list
  * WSDL: :download:`Click here</public-api/zato.wsdl>`

Request parameters
------------------

========== ======== ======== =================
Name       Datatype Optional Notes
========== ======== ======== =================
cluster_id int      ---      ID of the cluster
========== ======== ======== =================
            

Response parameters
-------------------

============ ======== ======== ===========================================================================================================================================
Name         Datatype Optional Notes
============ ======== ======== ===========================================================================================================================================
id           int      ---      Channel ID
name         string   ---      Name of the channel
is_active    boolean  ---      Whether the channel should be active
def_id       int      ---      ID of :doc:`a JMS WebSphere MQ connection definition</public-api/details/zato.definition.jms-wmq>` to use for connecting to a queue manager
def_name     string   ---      Name of the JMS WebSphere MQ connection definition
queue        string   ---      Name of the queue to read messages off
service_name string   ---      Name of a service that will be invoked upon reading each message from the queue
data_format  string   Yes      Expected data format. If returned, it will be either 'xml' or 'json'.
============ ======== ======== ===========================================================================================================================================

SOAP example
------------

.. code-block:: xml

    <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"
         xmlns:zato="https://zato.io/ns/20130518">
       <soapenv:Body>
          <zato:zato_channel_jms_wmq_get_list_request>
             <zato:cluster_id>1</zato:cluster_id>
          </zato:zato_channel_jms_wmq_get_list_request>
       </soapenv:Body>
    </soapenv:Envelope>
      
    <soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" 
        xmlns="https://zato.io/ns/20130518">
    <soap:Body>
        <zato_channel_jms_wmq_get_list_response xmlns="https://zato.io/ns/20130518">
        <zato_env>
            <cid>K309874127303687714472756758555002445966</cid>
            <result>ZATO_OK</result>
        </zato_env>
        <item_list>
            <item>
                <id>6</id>
                <name>ivr.client.37</name>
                <is_active>true</is_active>
                <def_id>3</def_id>
                <def_name>MQPORTAL5</def_name>
                <queue>IVRAAZ9</queue>
                <service_name>myservice</service_name>
                <data_format>xml</data_format>
            </item>
            <item>
                <id>7</id>
                <name>ivr.client.38</name>
                <is_active>false</is_active>
                <def_id>3</def_id>
                <def_name>MQPORTAL5</def_name>
                <queue>IVRAAZ9</queue>
                <service_name>myservice</service_name>
                <data_format>json</data_format>
            </item>
        </item_list>
    </zato_channel_jms_wmq_get_list_response>
    </soap:Body>
    </soap:Envelope>

JSON example
------------

.. code-block:: javascript

    {
      "cluster_id": 1
    }

    {
      "zato_env": {
        "details": "",
        "result": "ZATO_OK",
        "cid": "K309874127303687714472756758555002445966"
      },
      "zato_channel_jms_wmq_get_list_response": [
        {
          "def_name": "MQPORTAL5",
          "name": "ivr.client.37",
          "service_name": "myservice",
          "is_active": true,
          "data_format": "xml",
          "queue": "IVRAAZ9",
          "def_id": 3,
          "id": 6
        },
        {
          "def_name": "MQPORTAL5",
          "name": "ivr.client.38",
          "service_name": "myservice",
          "is_active": false,
          "data_format": "json",
          "queue": "IVRAAZ10",
          "def_id": 3,
          "id": 7
        }
      ]
    }
