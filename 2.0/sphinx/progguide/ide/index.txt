.. warning::
   This document is for a version of Zato that is no longer supported. The newest one is `here </docs/>`_.



IDE integration overview
------------------------

Zato supports hot-deployment of Python modules loaded in one of several supported Integrated Development Environments directly
to a cluster, enabling faster develop/test cycles when prototyping services.

The functionality is automatically available in Zato 3.0+ and for environments using previous versions,
the steps below are needed to enable it manually.

Supported IDEs are:

* PyCharm
* Visual Studio Code

.. image:: ../../gfx/progguide/ide-deploy/pycharm_ide_deploy_true.jpg

.. image:: ../../gfx/progguide/ide-deploy/vscode_ide_deploy_true.jpg

Upload the service
~~~~~~~~~~~~~~~~~~

1. To configure a dedicated deployment endpoint, download the service source file from the
   `zato-labs GitHub repository <https://github.com/zatosource/zato-labs/blob/HEAD/ide-deploy/ide_deploy.py>`_.

2. From the web administration UI, visit **Services -> List Services**, then
   select the **Upload services** button.

3. Supply *ide_deploy.py* downloaded in step 1. The UI should report
   "Service package uploaded, check the server logs for details".

Create the authentication credential
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

1. Visit **Security -> HTTP Basic Auth**, then select **Create a new HTTP
   Basic Auth definition**:

   * **Name**: *ide_publisher*
   * **Username**: *ide_publisher*
   * **Realm**: *zato*

2. Select **Change password** beside the *ide_publisher* credential, and set a password.

Create the channel
~~~~~~~~~~~~~~~~~~

Visit **Connections -> Channels -> Plain HTTP**, then select **Create a new
Plain HTTP Channel**:

* **Name**: *ide_deploy.create*
* **URL path**: */zato/ide-deploy*
* **Data format**: JSON
* **Service**: *ide-deploy.create*
* **Security definition**: *HTTP Basic Auth/ide_publisher*

Configure the IDE
~~~~~~~~~~~~~~~~~

As the final step - choose your IDE and install a Zato plugin for it:

  * :doc:`./pycharm`
  * :doc:`./vscode`
