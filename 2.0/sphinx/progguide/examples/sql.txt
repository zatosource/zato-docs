.. warning::
   You are browsing an old version of the documentation. The newest one is `here </docs/3.1>`_ .


.. highlight:: python
   :linenothreshold: 0

SQL usage examples
==================

SQL databases are accessed through
`SQLAlchemy <http://docs.sqlalchemy.org>`_
sessions and any feature SQLAlchemy supports is available to Zato services.

Regardless of how a database is accessed and what sort of queries are issued,
it's always required to close a session object when a service is done using it.
It's easiest to use the Python's built-in
`contextlib.closing <http://docs.python.org/2.7/library/contextlib.html#contextlib.closing>`_
manager for doing it.

The full API is documented 
:doc:`here <../outconn/sql>`.

.. _progguide-examples-sql-raw:

Issuing raw SQL
---------------

::

   # stdlib
   from contextlib import closing
   
   # Zato
   from zato.server.service import Service
   
   class MyService(Service):
       def handle(self):
           
           # Always use templates and bind variables
           template = 'SELECT name FROM http_soap WHERE data_format=:data_format'
           parameters = {'data_format':'json'}
           
           with closing(self.outgoing.sql.get('my-conn').session()) as session:
               result = session.execute(template, parameters)
               for item in result:
                   self.logger.info(item)

.. code-block:: text

   INFO - (u'zato.security.wss.create.json',)
   INFO - (u'zato.http-soap.ping.json',)
   INFO - (u'zato.service.configure-request-response.json',)
   INFO - (u'zato.kvdb.data-dict.dictionary.get-key-list.json',)

.. _progguide-examples-sql-sqlalchemy:

SQLAlchemy models
-----------------

SQLAlchemy models can be used instead of issuing plain SQL queries. This is what
Zato's
`own services <https://github.com/zatosource/zato/tree/master/code/zato-server/src/zato/server/service/internal>`_
to stay database-neutral and support more than one database engine.

Refer to the :doc:`API docs <../outconn/sql>` for a usage example involving SQLAlchemy
models.