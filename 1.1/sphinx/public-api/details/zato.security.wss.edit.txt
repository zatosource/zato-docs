.. warning::
   This document is for a version of Zato that is no longer supported. The newest one is `here </docs/>`_.


zato.security.wss.edit
======================

Overview
--------

Updates an already existing WS-Security definition.

.. note::

  Use :doc:`zato.security.wss.change-password<./zato.security.wss.change-password>`
  to change its password.

* List response: No
* SOAP action: zato.security.wss.edit
* SOAP URL path: /zato/soap
* JSON URL path: /zato/json/zato.security.wss.edit
* WSDL: :download:`Click here</public-api/zato.wsdl>`

Request parameters
------------------

======================== ======== ======== =================================================================
Name                     Datatype Optional Notes
======================== ======== ======== =================================================================
cluster_id               int      ---      ID of the cluster this definition is configured in
name                     string   ---      Definition name
is_active                boolean  ---      Whether the definition should be active upon its creation
username                 string   ---      Username
password_type            string   ---      Same as for :doc:`zato.security.get-list<./zato.security.get-list>`
reject_empty_nonce_creat boolean  ---      〃
reject_stale_tokens      boolean  ---      〃
reject_expiry_limit      boolean  ---      〃
nonce_freshness_time     int      ---      〃
======================== ======== ======== =================================================================
            

Response parameters
-------------------

==== ======== ======== ========================
Name Datatype Optional Notes
==== ======== ======== ========================
id   int      ---      Copied over from request
name string   ---      Copied over from request
==== ======== ======== ========================


SOAP example
------------

.. code-block:: xml

   <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"
        xmlns:zato="https://zato.io/ns/20130518">
      <soapenv:Body>
         <zato:zato_security_wss_edit_request>
            <zato:cluster_id>7</zato:cluster_id>
            <zato:cluster_id>1</zato:cluster_id>
            <zato:name>CRM Client 13</zato:name>
            <zato:is_active>true</zato:is_active>
            <zato:password_type>clear_text</zato:password_type>
            <zato:username>crm13</zato:username>
            <zato:reject_empty_nonce_creat>false</zato:reject_empty_nonce_creat>
            <zato:reject_stale_tokens>true</zato:reject_stale_tokens>
            <zato:reject_expiry_limit>1800</zato:reject_expiry_limit>
            <zato:nonce_freshness_time>1800</zato:nonce_freshness_time>
         </zato:zato_security_wss_edit_request>
      </soapenv:Body>
   </soapenv:Envelope>
      
   <soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"
      xmlns="https://zato.io/ns/20130518">
   <soap:Body>
       <zato_security_wss_edit_response xmlns="https://zato.io/ns/20130518">
       <zato_env>
           <cid>K106817207860088711887096277446461972252</cid>
           <result>ZATO_OK</result>
       </zato_env>
       <item>
           <id>8</id>
           <name>CRM Client 13</name>
       </item>
   </zato_security_wss_edit_response>
   </soap:Body>
   </soap:Envelope>

JSON example
------------

.. code-block:: javascript

   {
      "id": 8,
      "cluster_id": 1,
      "name": "CRM Client 13",
      "is_active": true,
      "password_type": "clear_text",
      "username": "crm13",
      "reject_empty_nonce_creat": false,
      "reject_stale_tokens": true,
      "reject_expiry_limit": 3600,
      "nonce_freshness_time": 3600
   }

   {
     "zato_env": {
       "details": "",
       "result": "ZATO_OK",
       "cid": "K106817207860088711887096277446461972252"
     },
     "zato_security_wss_edit_response": {
       "id": 8,
       "name": "CRM Client 13"
     }
   }
