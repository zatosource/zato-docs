.. warning::
   This document is for a version of Zato that is no longer supported. The newest one is `here </docs/>`_.



Open-source ESB, SOA, REST, APIs and Cloud Integrations in Python
------------------------------------------------------------------

Getting help
============

* Read the :doc:`no-nonsense intro to ESB and SOA <intro/esb-soa>`

* :doc:`Download and install<admin/guide/install-zato>` the latest version

* `Priority commercial support and training <https://zato.io/support>`_

* `Visit GitHub <https://github.com/zatosource/zato>`_ to fork code and contribute ideas

* Read the `Zato Blog <https://zato.io/blog/index.html>`_

* Ask around on the `mailing list <https://mailman-mail5.webfaction.com/listinfo/zato-discuss>`_

* Join the `#zato IRC channel <https://webchat.freenode.net/?channels=zato>`_ on Freenode network

* Look up fellow professionals on `LinkedIn <https://www.linkedin.com/groups?gid=5015554>`_

* `Twitter <https://twitter.com/zatosource>`_ for quick questions and answers 

* Documentation for: `2.0 </docs/2.0/>`_ (current) · `1.1 </docs/1.1/>`_ (previous)


What makes Zato unique
======================

* **Open-source ESB**, **SOA**, **REST**, **APIs** and **cloud integrations** in **Python**

* Using Python alone gives you **increased productivity**

* **HA load-balancer**, **hot-deployment** and **hot-reconfiguration** almost everywhere - 
  forget server restarts

* Browser-based **GUI**, **CLI** and **API** - forget XML configuration

* Written **by pragmatists for pragmatists** - you'll never have to spend an entire
  night debugging a horror system running on an exotic platform again

* **Protocols**, **industry standards** and **data formats** - HTTP, JSON, SOAP, AMQP,
  JMS WebSphere MQ, ZeroMQ, Redis, SQL, FTP, security and more

* **Commercial support** and **training** available. Growing **community** around the project.

Introduction
============

    * **Basic concepts:**
      :doc:`No-nonsense intro to ESB and SOA<intro/esb-soa>` |
      :doc:`High-level overview <intro/overview-high-level>` | 
      :doc:`Technical overview <intro/overview-tech>`

    * **Tutorial:**
      :doc:`Part 1<tutorial/01>` |
      :doc:`Part 2<tutorial/02>`
      
I18N
====

    * 中文: 
      `Zato—基于Python的ESB和后端应用服务器 <http://www.infoq.com/cn/articles/zato>`_ | 
      `Python 发送 AMQP 消息 <http://www.oschina.net/translate/howto-sending-amqp-messages>`_

    * Català:
      :doc:`Què és un ESB i què és SOA<intro/esb-soa-ca>`

    * Português: 
      :doc:`O que ESB e SOA são, afinal?<intro/esb-soa-pt>`
      
    * ру́сский: 
      :doc:`Что такое ESB и SOA<intro/esb-soa-ru>`

Web admin
=========

    * **Overview:** 
      :doc:`Introduction<web-admin/intro>` | 
      :doc:`Securing the web admin<web-admin/security>`

    * **Clusters:**
      :doc:`Main view<web-admin/clusters>`

    * **Servers:**
      :doc:`Main view<web-admin/servers/main>` | 
      :doc:`Adding and removing servers<web-admin/servers/add-remove>`

    * **Load balancer:**
      :doc:`GUI view<web-admin/load-balancer/gui>` | 
      :doc:`Source code view<web-admin/load-balancer/source-code>` | 
      :doc:`Remote commands<web-admin/load-balancer/remote-commands>` | 
      :doc:`Statistics<web-admin/load-balancer/statistics>`

    * **Services:**
      :doc:`Main view<web-admin/services/main>` | 
      :doc:`Uploading a service<web-admin/services/upload>`

    * **Service details:**
      :doc:`Main view<web-admin/service-details/main>` | 
      :doc:`Invoker<web-admin/service-details/invoker>` | 
      :doc:`Source code<web-admin/service-details/source-code>` | 
      :doc:`WSDL<web-admin/service-details/wsdl>` | 
      :doc:`Sample requests/responses<web-admin/service-details/sample-req-resp>` | 
      :doc:`Slow responses<web-admin/service-details/slow-responses>`

    * **Security:**
      :doc:`HTTP Basic Auth<web-admin/security/basic-auth>` | 
      :doc:`Technical accounts<web-admin/security/tech-account>` | 
      :doc:`WS-Security<web-admin/security/ws-security>`

    * **Connection definitions:**
      :doc:`AMQP<web-admin/conn-def/amqp>` | 
      :doc:`JMS WebSphere MQ<web-admin/conn-def/jms-wmq>`

    * **Channels:**
      :doc:`AMQP<web-admin/channels/amqp>` | 
      :doc:`JMS WebSphere MQ<web-admin/channels/jms-wmq>` | 
      :doc:`Plain HTTP<web-admin/channels/plain-http>` | 
      :doc:`SOAP<web-admin/channels/soap>` | 
      :doc:`ZeroMQ<web-admin/channels/zmq>`

    * **Outgoing connections:**
      :doc:`AMQP<web-admin/outgoing/amqp>` | 
      :doc:`FTP<web-admin/outgoing/ftp>` | 
      :doc:`JMS WebSphere MQ<web-admin/outgoing/jms-wmq>` | 
      :doc:`Plain HTTP<web-admin/outgoing/plain-http>` | 
      :doc:`SOAP<web-admin/outgoing/soap>` | 
      :doc:`SQL<web-admin/outgoing/sql>` | 
      :doc:`ZeroMQ<web-admin/outgoing/zmq>`

    * **Key/value DB (Redis):**
      :doc:`Data dictionaries<web-admin/kvdb/data-dict>` |
      :doc:`Remote commands<web-admin/kvdb/remote-commands>`

    * **Scheduler:**
      :doc:`Main view<web-admin/scheduler/main>`

    * **Statistics:**
      *(Documented in their own section)*
      :doc:`Guide<stats/guide>` |
      :doc:`Maintenance<stats/maintenance>` | 
      :doc:`Load-balancer's statistics<stats/lb>`

    * **User settings:**
      :doc:`Main view<web-admin/settings/main>`

Programming guide
=================

    * **Examples**
      :doc:`Overview <progguide/examples/index>` | 
      :doc:`HTTP <progguide/examples/http>` | 
      :doc:`SimpleIO (SIO) <progguide/examples/sio>` | 
      :doc:`JSON <progguide/examples/json>` | 
      :doc:`XML <progguide/examples/xml>` | 
      :doc:`SOAP <progguide/examples/soap>` | 
      :doc:`CSV <progguide/examples/csv>` | 
      :doc:`Other data formats <progguide/examples/other-formats>` | 
      :doc:`AMQP <progguide/examples/amqp>` |
      :doc:`FTP <progguide/examples/ftp>` |
      :doc:`JMS WebSphere MQ <progguide/examples/jms-wmq>` |
      :doc:`Redis <progguide/examples/redis>` |
      :doc:`Scheduler <progguide/examples/scheduler>` |
      :doc:`SQL <progguide/examples/sql>` |
      :doc:`ZeroMQ <progguide/examples/zmq>`

    * **Developing services and applications:**
      :doc:`Overview <progguide/overview>` |
      :doc:`Developing services <progguide/service-dev>` |
      :doc:`Request and response objects<progguide/request-response>` |
      :doc:`Channels<progguide/channels>` |
      :doc:`Outgoing connections<progguide/outconn/overview>` |
      :doc:`Key/value DB (Redis)<progguide/kvdb>` |
      :doc:`Scheduler<progguide/scheduler>` |
      :doc:`Invoking other services <progguide/invoking-services>` |
      :doc:`Python client<progguide/clients/python>` |
      :doc:`Security<progguide/security>` |
      :doc:`Where to keep service-local config<progguide/service-local-config>` |
      :doc:`Documenting<progguide/documenting>`

    * **Request/response documents:**
      :doc:`SimpleIO (SIO) <progguide/sio>` | 
      :doc:`JSON <progguide/json>` |
      :doc:`XML <progguide/xml>` | 
      :doc:`Other data formats <progguide/other-formats>`

    * **Sync and async:**
      :doc:`Synchronous and asynchronous message flow<progguide/sync-async/flow>`

    * **Service hooks:**
      :doc:`Hooking into a service's lifecycle <progguide/service-hooks>`

    * **Logging and debugging techniques:**
      :doc:`Logging<progguide/logging>` | 
      :doc:`Debugging<progguide/debugging>`

    * **Customizing web admin:**
      :doc:`Making sure you work on the right environment<progguide/web-admin-settings>`

Administration guide
====================

    * :doc:`Installing Zato binaries<admin/guide/install-zato>` |
      :doc:`Components<admin/guide/install-config/overview>` |
      :doc:`Command line interface (CLI)<admin/cli/index>` |
      :doc:`High availability<admin/guide/ha>` |
      :doc:`Capacity planning<admin/guide/capacity>` |
      :doc:`Installing services<admin/guide/installing-services>` |
      :doc:`Enabling extra libraries <admin/guide/enabling-extra-libs>` |
      :doc:`Migrating between releases <admin/guide/migrating>` |
      :doc:`Managing server objects en masse<admin/guide/enmasse>`

Architecture
============

    * **Zato components:**
      :doc:`Overview<architecture/overview>` | 
      :doc:`Web admin<architecture/web-admin>` | 
      :doc:`Load-balancer<architecture/load-balancer>` | 
      :doc:`Servers<architecture/servers>` | 
      :doc:`SQL ODB<architecture/sql-odb>` |
      :doc:`Redis<architecture/redis>` |
      :doc:`Certificate Authority (CA)<architecture/ca>`

Statistics
==========

    * :doc:`Guide<stats/guide>` |
      :doc:`Maintenance<stats/maintenance>` | 
      :doc:`Load-balancer's statistics<stats/lb>`

Security
========

    * **Users:**
      :doc:`OS-level and application users<security/users>`

    * **Reference:**
      :doc:`Attack surface<security/attack-surface>` |
      :doc:`Default configuration values<security/config-defaults>`

    * **Other:**
      :doc:`Reporting security issues<security/reporting-issues>`

.. _index-public-api-toc:

Public SOAP and JSON server API
================================

    * **Overview:**
      :doc:`Introducing the public API</public-api/intro>` | :download:`Download WSDL </public-api/zato.wsdl>`

    * **Channels:**
      :doc:`zato.channel.amqp.*</public-api/details/zato.channel.amqp>` |
      :doc:`zato.channel.jms-wmq.*</public-api/details/zato.channel.jms-wmq>` |
      :doc:`zato.channel.zmq.*</public-api/details/zato.channel.zmq>`

    * **Definitions:**
      :doc:`zato.definition.amqp.*</public-api/details/zato.definition.amqp>` |
      :doc:`zato.definition.jms-wmq.*</public-api/details/zato.definition.jms-wmq>`

    * **HTTP/SOAP:**
      :doc:`zato.http-soap.*</public-api/details/zato.http-soap>`

    * **Key/value DB (Redis):**
      :doc:`zato.kvdb.data-dict.dictionary.*</public-api/details/zato.kvdb.data-dict.dictionary>` |
      :doc:`zato.kvdb.data-dict.impexp.*</public-api/details/zato.kvdb.data-dict.impexp>` |
      :doc:`zato.kvdb.data-dict.translation.*</public-api/details/zato.kvdb.data-dict.translation>` |
      :doc:`zato.kvdb.remote-command.*</public-api/details/zato.kvdb.remote-command>`

    * **Ougoing connections:**
      :doc:`zato.outgoing.amqp.*</public-api/details/zato.outgoing.amqp>` |
      :doc:`zato.outgoing.ftp.*</public-api/details/zato.outgoing.ftp>` |
      :doc:`zato.outgoing.jms-wmq.*</public-api/details/zato.outgoing.jms-wmq>` |
      :doc:`zato.outgoing.sql.*</public-api/details/zato.outgoing.sql>` |
      :doc:`zato.outgoing.zmq.*</public-api/details/zato.outgoing.zmq>`

    * **Ping services:**
      :doc:`zato.ping</public-api/details/zato.ping>` |
      :doc:`zato.ping2</public-api/details/zato.ping2>`

    * **Scheduler:**
      :doc:`zato.scheduler.job.*</public-api/details/zato.scheduler.job>`

    * **Security:**
      :doc:`zato.security.*</public-api/details/zato.security>` |
      :doc:`zato.security.basic-auth.*</public-api/details/zato.security.basic-auth>` |
      :doc:`zato.security.tech-account.*</public-api/details/zato.security.tech-account>` |
      :doc:`zato.security.wss.*</public-api/details/zato.security.wss>`

    * **Servers:**
      :doc:`zato.server.*</public-api/details/zato.server>`

    * **Services:**
      :doc:`zato.service.*</public-api/details/zato.service>`

    * **Statistics:**
      :doc:`zato.stats.*</public-api/details/zato.stats>`

Zato, the open-source project
==============================

    * :doc:`Getting involved<project/get-involved>` | :doc:`Diversity statement<project/diversity>` |
      :doc:`Changelog<project/changelog>`

.. toctree::
   :hidden:
   :titlesonly:
   :glob:

   admin/cli/*
   admin/guide/*
   admin/guide/install-config/*
   architecture/*
   intro/*
   progguide/*
   progguide/clients/*
   progguide/examples/*
   progguide/outconn/*
   project/*
   public-api/*
   public-api/details/*
   security/*
   stats/*
   tutorial/*
   web-admin/*
   web-admin/channels/*
   web-admin/conn-def/*
   web-admin/kvdb/*
   web-admin/load-balancer/*
   web-admin/outgoing/*
   web-admin/scheduler/*
   web-admin/security/*
   web-admin/servers/*
   web-admin/service-details/*
   web-admin/services/*
   web-admin/settings/*
