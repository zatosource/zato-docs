.. warning::
   This document is for a version of Zato that is no longer supported. The newest one is `here </docs/>`_.


.. highlight:: python
   :linenothreshold: 0

Programming examples
====================

Subsequent chapters present how a typical code to perform a given operation,
such as manipulating JSON or XML, will look like. It is assumed the reader has already
completed
:doc:`the tutorial <../../tutorial/01>`, 
is familiar with Zato's
:doc:`architecture <../../architecture/overview>`
and read about
:doc:`channels <../channels>`
and
:doc:`outgoing connections <../outconn/overview>` - concepts explained in these chapters are not repeated here.

.. note ::

  Depending on how you write code, in what data format, it's possible to write it once only
  and expose it 
  :doc:`through <../../web-admin/channels/amqp>`
  :doc:`multiple <../../web-admin/channels/jms-wmq>`
  :doc:`channels <../../web-admin/channels/plain-http>`
  :doc:`simultaneously <../../web-admin/channels/soap>`
  :doc:`without <../../web-admin/channels/zmq>`
  any code changes,
  without programming and without server restarts either.
  
  If you use
  :doc:`SimpleIO (SIO) <../sio>`, 
  the same code can be made available through many independent channels
  using JSON or XML simultaneously.
  
  Also, unless you're implementing a custom security scheme, services can assume that the
  fact they're invoked means that previous authentication/authorization layers granted a client
  application access. You don't need to code security.

=========================================== ================================================================================================
Topic                                       Examples
=========================================== ================================================================================================
:doc:`HTTP <./http>`                        * :ref:`Exposing a service over HTTP <progguide-examples-http-exposing>`
                                            * :ref:`Accessing raw request <progguide-examples-http-raw-request>`
                                            * :ref:`Accessing request headers <progguide-examples-http-request-headers>`
                                            * :ref:`Accessing request URL query parameters <progguide-examples-http-access-url-query>`
                                            * :ref:`Setting response headers <progguide-examples-http-response-headers>`
                                            * :ref:`Setting content type and status code <progguide-examples-http-content-type-status-code>`
                                            * :ref:`Returning attachments <progguide-examples-http-attachments>`
                                            
:doc:`SimpleIO (SIO) <./sio>`               * :ref:`Making a service accept and return JSON/XML/SOAP <progguide-examples-sio-service>`
                                            
:doc:`JSON <./json>`                        * :ref:`Accessing JSON request <progguide-examples-json-request>`
                                            * :ref:`Converting JSON to Bunch <progguide-examples-json-bunch>`
                                            * :ref:`Returning JSON <progguide-examples-json-responses>`
                                            * :ref:`Invoking a JSON service using GET <progguide-examples-json-invoking-get>`
                                            * :ref:`Invoking a JSON service using POST <progguide-examples-json-invoking-post>`
                                            
:doc:`XML <./xml>`                          * :ref:`Accessing XML request <progguide-examples-xml-request>`
                                            * :ref:`Creating responses <progguide-examples-xml-responses>`
                                            * :ref:`Invoking an XML service<progguide-examples-xml-invoking>`

:doc:`SOAP <./soap>`                        * :ref:`Accessing SOAP request <progguide-examples-soap-request>`
                                            * :ref:`Creating responses <progguide-examples-soap-response>`
                                            * :ref:`Invoking a SOAP service <progguide-examples-soap-invoking>`
                                            
:doc:`CSV <./csv>`                          * :ref:`Reading CSV on input <progguide-examples-csv-request>`
                                            * :ref:`Producing CSV <progguide-examples-csv-response>`
                                            
:doc:`Other data formats <./other-formats>` * :ref:`Reading arbitrary data formats <progguide-examples-other-formats-reading>`
                                            * :ref:`Accessing BASE64-encoded data <progguide-examples-other-formats-base64>`
                                            
:doc:`AMQP <./amqp>`                        * :ref:`Receiving messages from queues <progguide-examples-amqp-receiving>`
                                            * :ref:`Sending messages to exchanges <progguide-examples-amqp-sending>`
                                            
:doc:`FTP <./ftp>`                          * :ref:`Putting files on server <progguide-examples-ftp-putting>`
                                            * :ref:`Listing directories <progguide-examples-ftp-listing>`
                                            * :ref:`Reading files <progguide-examples-ftp-reading>`
                                            
:doc:`JMS WebSphere MQ <./jms-wmq>`         * :ref:`Receiving messages from queues <progguide-examples-jms-wmq-receiving>`
                                            * :ref:`Sending messages to queues <progguide-examples-jms-wmq-sending>`
                                            
:doc:`Redis <./redis>`                      * :ref:`Simple keys <progguide-examples-redis-simple-keys>`
                                            * :ref:`Lists <progguide-examples-redis-lists>`
                                            * :ref:`Dictionaries (hashmaps) <progguide-examples-redis-dictionaries>`
                                            * :ref:`Transactions <progguide-examples-redis-transactions>`
                                            
:doc:`Scheduler <./scheduler>`              * :ref:`Invoking services at predefined intervals <progguide-examples-scheduler-invoking>`
                                            * :ref:`Scheduling jobs programmatically <progguide-examples-zmq-scheduling-programmatically>`

:doc:`SQL <./sql>`                          * :ref:`Issuing raw SQL <progguide-examples-sql-raw>`
                                            * :ref:`SQLAlchemy <progguide-examples-sql-sqlalchemy>`
                                            
:doc:`ZeroMQ <./zmq>`                       * :ref:`Receiving messages from sockets <progguide-examples-zmq-receiving>`
                                            * :ref:`Sending messages to sockets <progguide-examples-zmq-sending>`
=========================================== ================================================================================================