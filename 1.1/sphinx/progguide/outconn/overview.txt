.. warning::
   This document is for a version of Zato that is no longer supported. The newest one is `here </docs/>`_.


.. highlight:: python
   :linenothreshold: 0

Outgoing connections
====================

.. image:: /gfx/progguide-outconn.png
   :align: center

Each service can automatically access external resources using a range of protocols
documented in subsequent chapters. 

Some of the protocols are synchronous while communicating over the rest is 
performed asynchronously, in a fire-and-forget manner.

Note that you always need to take 
:doc:`high-availability (HA) <../../admin/guide/ha>`
into account, particularly so 
if you're using 
:doc:`AMQP <./amqp>`,
:doc:`JMS WebSphere MQ <./jms-wmq>`
or
:doc:`ZeroMQ <./zmq>` outgoing connections.

=================================== ===========
Protocol                            Synchronous
=================================== ===========
:doc:`AMQP <./amqp>`                ---        
:doc:`FTP <./ftp>`                  Yes
:doc:`HTTP <./http>`                Yes
:doc:`JMS WebSphere MQ <./jms-wmq>` ---
:doc:`SQL <./sql>`                  Yes
:doc:`ZeroMQ <./zmq>`               ---
=================================== ===========

.. note::

  There's nothing preventing you from accessing external resources using
  other transfer protocols.
  
  You won't have any particular support for doing
  so from Zato but the platform itself doesn't disallow using any other means of
  communicating if you establish and maintain the connections yourself. Do keep
  in mind though that Zato servers use a gevent-based main loop by default which
  means you shouldn't open TCP connections from extensions written in C, any sockets
  should be open in Python only.
  
  The list above introduces what Zato can offer out of the box in the current version 
  and will surely grow in future releases.