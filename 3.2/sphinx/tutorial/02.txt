.. highlight:: python
   :linenothreshold: 1

Tutorial - part 2/2
===================

.. note ::

  Be sure to complete :doc:`part 1 <./01>` of the tutorial first.
  Some ideas previously explained there are not repeated here.

Invoking other systems
----------------------

To summarise it, in the previous part we set up a working Zato cluster, deployed a service and created
a REST API channel through which the service was invoked.

.. image:: /gfx/tutorial/service-complete.png

In this part we will make the service actually obtain data from remote systems and process it in accordance
with its business requirements.

To invoke other systems, applications and APIs, Zato services uses outgoing connections which is the
concept we will cover now.

Outgoing connections
--------------------

Outgoing connections are the natural counterpart to channels. Whereas channels allow one to make
Zato services become available to external API clients, with outgoing connections (outconns for short)
it is Zato services that invoke endpoints of external systems.

All outconns are invoked using attributes from **self.out**, e.g. self.out.rest, self.out.amqp, self.out.sap and so on,
maintaining a connection pool internally when needed so that services can just focus on the invocation part.

In addition to outconns, it is also possible to install libraries from `PyPI <https://pypi.org>`_ and invoke remote
systems using client libraries for connection types other than what Zato has built-in.

For the purposes of the tutorial, all the REST and AMQP endpoints are already prepared on zato.io so that you do not
need to set up anything and we can start by creating the outconns now.

REST outgoing connections
-------------------------

In Dashboard at http://localhost:8183, go to Connections -> Outgoing -> REST and click  Create a new REST outgoing connection.

.. image:: /gfx/tutorial/dashboard-outconn-rest-menu.png

A form will pop up, fill it out per the table below.

=========== ==============================
Header      Value
=========== ==============================
Name        CRM
Active      Yes
Host        \http://zato.io:9193
Data format JSON
URL path    /tutorial/get-customer
Security    No security
=========== ==============================

We need a REST outgoing connection to the Payments system too.

Pinging REST outconns
---------------------

AMQP outgoing connections
-------------------------

Pinging AMQP with publications
------------------------------
