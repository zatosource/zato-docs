.. highlight:: bash
   :linenothreshold: 1000

Custom attributes
=================

In addition to :doc:`standard <../user/index>` attributes describing SSO users, such as username, password or email,
it is also possible to create and manage additional arbitrary attributes holding any kind of information required.

Custom user attributes exist either for as long as their user exists or, optionally, can be configured to expire after some time.
They will persist across multiple login sessions but a related feature,
session attributes, lets one set attributes for each session, each login, separately.

Name of an attribute is its identifier, there is no separate ID field. The name is unique independently for user and session attributes,
i.e. there can be a user attribute of a given name and a distinct session attribute of the same name but there cannot be multiple
user, nor session, attributes with the same name.

Each attribute can be optionally stored in the database in an encrypted form - this can be used, for instance,
with Social Security Numbers or other Personally Identifiable information (PII). Encryption and decryption is performed on the fly,
no programming is needed.

Regular users may access only their own attributes while super-users can manage attributes of any user.

The API is available for Python code and REST clients.

User attributes API
-------------------

======================================================================== ========================================================================= =======================================================================================
REST                                                                     Python                                                                    Description
======================================================================== ========================================================================= =======================================================================================
POST :doc:`/zato/sso/user/attr <../../api/rest/user/attr/create>`        :doc:`self.sso.user.attr.create <../../api/python/user/attr/create>`      Creates a new named attribute
POST :doc:`/zato/sso/user/attr <../../api/rest/user/attr/create>`        :doc:`self.sso.user.attr.create_many <../../api/python/user/attr/create>` As above but can create multiple attributes at a time
PATCH :doc:`/zato/sso/user/attr <../../api/rest/user/attr/update>`       :doc:`self.sso.user.attr.update <../../api/python/user/attr/update>`      Updates an already existing attribute
PATCH :doc:`/zato/sso/user/attr <../../api/rest/user/attr/update>`       :doc:`self.sso.user.attr.update_many <../../api/python/user/attr/update>` As above but can update multiple attributes at a time
PUT :doc:`/zato/sso/user/attr <../../api/rest/user/attr/set>`            :doc:`self.sso.user.attr.set <../../api/python/user/attr/set>`            Creates a new named attribute if it doesn't already exist or updates it if it does
PUT :doc:`/zato/sso/user/attr <../../api/rest/user/attr/set>`            :doc:`self.sso.user.attr.set_many <../../api/python/user/attr/set>`       As above but can set multiple attributes at a time
DELETE :doc:`/zato/sso/user/attr <../../api/rest/user/attr/delete>`      :doc:`self.sso.user.attr.delete <../../api/python/user/attr/delete>`      Deletes an attribute
DELETE :doc:`/zato/sso/user/attr <../../api/rest/user/attr/delete>`      :doc:`self.sso.user.attr.delete_many <../../api/python/user/attr/delete>` As above but can delete multiple attributes at a time
GET :doc:`/zato/sso/user/attr <../../api/rest/user/attr/get>`            :doc:`self.sso.user.attr.get <../../api/python/user/attr/get>`            Returns an attribute's value, possibly with its metadata
GET :doc:`/zato/sso/user/attr <../../api/rest/user/attr/get>`            :doc:`self.sso.user.attr.get_many <../../api/python/user/attr/get>`       As above but can return multiple attributes at a time
GET :doc:`/zato/sso/user/attr/exists <../../api/rest/user/attr/exists>`  :doc:`self.sso.user.attr.exists <../../api/python/user/attr/exists>`      Checks if an attribute exists
GET :doc:`/zato/sso/user/attr/exists <../../api/rest/user/attr/exists>`  :doc:`self.sso.user.attr.exists_many <../../api/python/user/attr/exists>` As above but can check multiple attributes at a time
GET :doc:`/zato/sso/user/attr/names <../../api/rest/user/attr/exists>`   :doc:`self.sso.user.attr.names <../../api/python/user/attr/names>`        Returns names of all attributes defined for a user (only names, without values)
======================================================================== ========================================================================= =======================================================================================

Session attributes API
----------------------

============================================================================= =============================================================================== =======================================================================================
REST                                                                          Python                                                                          Description
============================================================================= =============================================================================== =======================================================================================
POST :doc:`/zato/sso/session/attr <../../api/rest/session/attr/create>`       :doc:`self.sso.session.attr.create <../../api/python/session/attr/create>`      Creates a new named attribute
POST :doc:`/zato/sso/session/attr <../../api/rest/session/attr/create>`       :doc:`self.sso.session.attr.create_many <../../api/python/session/attr/create>` As above but can create multiple attributes at a time
PATCH :doc:`/zato/sso/session/attr <../../api/rest/session/attr/update>`      :doc:`self.sso.session.attr.update <../../api/python/session/attr/update>`      Updates an already existing attribute
PATCH :doc:`/zato/sso/session/attr <../../api/rest/session/attr/update>`      :doc:`self.sso.session.attr.update_many <../../api/python/session/attr/update>` As above but can update multiple attributes at a time
PUT :doc:`/zato/sso/session/attr <../../api/rest/session/attr/set>`           :doc:`self.sso.session.attr.set <../../api/python/session/attr/set>`            Creates a new named attribute if it doesn't already exist or updates it if it does
PUT :doc:`/zato/sso/session/attr <../../api/rest/session/attr/set>`           :doc:`self.sso.session.attr.set_many <../../api/python/session/attr/set>`       As above but can set multiple attributes at a time
DELETE :doc:`/zato/sso/session/attr <../../api/rest/session/attr/delete>`     :doc:`self.sso.session.attr.delete <../../api/python/session/attr/delete>`      Deletes an attribute
DELETE :doc:`/zato/sso/session/attr <../../api/rest/session/attr/delete>`     :doc:`self.sso.session.attr.delete_many <../../api/python/session/attr/delete>` As above but can delete multiple attributes at a time
GET :doc:`/zato/sso/session/attr <../../api/rest/session/attr/get>`           :doc:`self.sso.session.attr.get <../../api/python/session/attr/get>`            Returns an attribute's value, possibly with its metadata
GET :doc:`/zato/sso/session/attr <../../api/rest/session/attr/get>`           :doc:`self.sso.session.attr.get_many <../../api/python/session/attr/get>`       As above but can return multiple attributes at a time
GET :doc:`/zato/sso/session/attr/exists <../../api/rest/session/attr/exists>` :doc:`self.sso.session.attr.exists <../../api/python/session/attr/exists>`      Checks if an attribute exists
GET :doc:`/zato/sso/session/attr/exists <../../api/rest/session/attr/exists>` :doc:`self.sso.session.attr.exists_many <../../api/python/session/attr/exists>` As above but can check multiple attributes at a time
GET :doc:`/zato/sso/session/attr/names <../../api/rest/session/attr/exists>`  :doc:`self.sso.session.attr.names <../../api/python/session/attr/names>`        Returns names of all attributes defined for a session (only names, without values)
============================================================================= =============================================================================== =======================================================================================
