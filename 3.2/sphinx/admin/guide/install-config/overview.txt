.. highlight:: bash
   :linenothreshold: 1

Installing and configuring Zato components
==========================================

.. note ::

  Thoroughly familiarize yourself with the
  :doc:`high-level overview <../../../intro/overview-high-level>`
  and
  :doc:`the technical one <../../../intro/overview-tech>`
  as well with
  :doc:`Zato's architecture <../../../architecture/overview>`,
  :doc:`OS-level and application users <../../../security/users>`
  and
  :doc:`the attack surface <../../../security/attack-surface>`
  before you start to install and configure Zato components.

  It's also highly recommeded that you :doc:`go through the tutorial first <../../../tutorial/01>`.

Overview
--------

* Each Zato environment is comprised of one or more clusters
* Clusters store their configuration in an SQL ODB
* Each cluster has a load-balancer
* A web admin console is needed to manage a cluster however a single web admin instance can be used
  to administer more than one cluster
* Each cluster has zero or more servers
* Incoming and outgoing connections are handled by servers and certain types of
  protocols - AMQP, IBM MQ and ZeroMQ - require separate connector
  processes to handle the traffic. The connectors are started
  and managed automatically, they don't need manual configuration.

.. note ::

  Cluster is a logical being - its mere physical manifestation is that it has
  its own configuration in the ODB. However, servers, web-admin, load-balancer,
  connectors are all components that actually start operating system-level processes,
  write out log entries and otherwise behave like objects that need to be administered.

Creating a new environment
--------------------------

To set up a completely new Zato environment you need to:

* Make sure Redis 2.8.4+ is installed and configured to allow access for Zato
* Ensure an SQL database is installed and a schema/username for Zato is created.
  Supported databases are:

  * PostgreSQL 9.x+
  * MySQL/MariaDB 5.5+
  * SQLite 3.x+

* Create a new cluster by:

  * Using :doc:`a quickstart cluster <../../cli/quickstart>`
  * Manually creating each of the components needed:

    * SQL ODB
    * Cluster's config
    * Web admin
    * Load-balancer
    * Scheduler
    * Servers

    SQL ODB and a cluster's config need to be created first and in that order,
    the rest can be installed in any order.

.. _admin-guide-install-config-versioned:

Config files are versioned
--------------------------

A history of changes to any config file is automatically kept in a given component's
`Bazaar <http://bazaar.canonical.com/en/>`_ repository, i.e. in the ./config/repo directory.

This allows one to compare different config versions or to revert to a safe state
after a mix-up.

The repository is created and managed completely behind the scenes and needs no
manual management however it's worth pointing out that it contains the whole history
of a given config file, possibly including any old secrets, such as passwords.

.. code-block:: text

  user@dev1:~/zato/server/config/repo$ bzr log
  ------------------------------------------------------------
  revno: 2
  committer: user@dev1
  branch nick: repo
  timestamp: Fri 2013-05-03 12:53:40 +0200
  message:
    Committed modified files
  ------------------------------------------------------------
  revno: 1
  committer: user@dev1
  branch nick: repo
  timestamp: Fri 2013-05-03 12:52:27 +0200
  message:
    Added new unversioned files
  user@dev1:~/zato/server/config/repo$

.. code-block:: text

  user@dev1:~/zato/server/config/repo$ bzr diff -r1..2
  === modified file 'server.conf'
  --- server.conf	2013-05-03 10:52:27 +0000
  +++ server.conf	2013-05-03 10:53:40 +0000
  @@ -1,7 +1,7 @@
   [main]
   gunicorn_bind=localhost:17010
   gunicorn_worker_class=gevent
  -gunicorn_workers=4
  +gunicorn_workers=2
   gunicorn_timeout=240
   gunicorn_user=
   gunicorn_group=
  user@dev1:~/zato/server/config/repo$

.. code-block:: text

  user@dev1:~/zato/server/config/repo$ bzr revert -r 1
   M  server.conf
  user@dev1:~/zato/server/config/repo$

.. code-block:: text

  user@dev1:~/zato/server/config/repo$ cat server.conf | grep gunicorn_workers
  gunicorn_workers=4
  user@dev1:~/zato/server/config/repo$

Read more
---------

Subsequent chapters present information on how to install each of the Zato components along
with a discussion on their config files.

================== ====================================================================== ====================================================
Component          Install chapter                                                        Configure chapter
================== ====================================================================== ====================================================
Quickstart cluster A quickstart cluster is a shortcut way                                 (n/a)
                   to
                   :doc:`create a working Zato environment <../../cli/quickstart-create>`
                   in 15 seconds
Web admin          :doc:`How to install <./install-web-admin>`                            :doc:`How to configure <./config-web-admin>`
Server             :doc:`How to install <./install-server>`                               :doc:`How to configure <./config-server>`
Scheduler          :doc:`How to install <./install-scheduler>`                            :doc:`How to configure <./config-scheduler>`
Cluster's config   :doc:`How to install <./install-cluster>`                              :doc:`Documented along with other web admin features
                                                                                          <../../../web-admin/intro>`
                   as :doc:`described here <../../cli/quickstart>`
Load-balancer      :doc:`How to install <./install-lb>`                                   :doc:`How to configure <./config-lb>`
SQL ODB            :doc:`How to install <./install-odb>`                                  (n/a)
Redis broker       `The Redis project <http://redis.io>`_                                 (n/a)
                   provides information on how to
                   install the software
CA                 :doc:`How to install <./install-ca>`                                   (n/a)
================== ====================================================================== ====================================================
