Command line interface (CLI)
============================

Introduction
------------

Zato administrators use both the web admin and the command line interface (CLI)
to manage Zato environments. These two methods don't overlap, both have their
distinct responsibilites.

While the web admin has been created with the goal
of aiding in running an already existing environment, the CLI has been created
with the goal of preparing Zato environments or otherwise addressing situations that
need access to an operating system Zato components are installed on.

Commands offered by the CLI always need an actual access to the file system via,
for instance, ssh. They can't be issued remotely through the web admin.

All commands are run using a single executable called **zato**.

Some commands are further composed of subcommands, e.g. the :doc:`zato update<./update>` command
is a wrapper for more specific commands, such as :doc:`zato update password<./update-password>`.

Commands can be run in a batch mode by using the combination of the
:ref:`--store-config<cli_index_common_options>` option and the :doc:`from-config<from-config>` command.

Summary of commands
---------------------

================================================================= ================================================================
Name                                                              Description
================================================================= ================================================================
:doc:`zato apispec<./apispec>`                                    Generates API specifications as OpenAPI and Sphinx
:doc:`zato ca<./ca>`                                              Certificate Authority (CA) management
:doc:`zato check-config<./check-config>`                          Sanity checks against a component's config
:doc:`zato component-version<./component-version>`                Shows a Zato component's version
:doc:`zato create<./create>`                                      Creates a Zato object
:doc:`zato crypto create-secret-key <./crypto/create-secret-key>` Creates a new secret key for servers and other commands to use
:doc:`zato decrypt<./decrypt>`                                    Decrypts secrets using a Zato component's private key
:doc:`zato delete<./delete>`                                      Deletes a Zato component
:doc:`zato encrypt<./encrypt>`                                    Encrypts secrets using a Zato component's public key
:doc:`zato hash get-rounds<./hash-get-rounds>`                    Computes configuration for safe hashing of secrets
:doc:`zato info<./info>`                                          Shows information on a Zato component
:doc:`zato from-config<./from-config>`                            Runs commands from a config file
:doc:`zato quickstart<./quickstart>`                              Quickly sets up a working Zato environment
:doc:`zato service<./service>`                                    Service management
:doc:`zato sso <./sso>`                                           User management and Single-Sign On
:doc:`zato start<./start>`                                        Starts a Zato component
:doc:`zato stop<./stop>`                                          Stops a Zato component
:doc:`zato update<./update>`                                      Updates parts of a Zato component
================================================================= ================================================================

.. _cli_index_zato_version:

Displaying version
------------------

::

  $ zato --version
  Zato 3.0.0+rev.be10fa20
  $

Format:

::

  Zato $major.$minor.$micro.rev-$rev_id

* $major - incremented on major releases, adding a lot of new functionality
* $minor - incremented on minor releases, more gradual than major ones
* $micro - incremented within minor releases when releasing fixes
* $rev_id - `git revision ID <https://github.com/zatosource/zato>`_ used to `build <https://github.com/zatosource/zato-build/>`_ the release from


.. _cli_index_common_options:

Common options
--------------

Each Zato command can make use of the following options:

=============== ===========
Name            Description
=============== ===========
-h, --help      Displays given command's help message
--store-log     Stores a command execution log in the directory the command has been run in.
--verbose       Displays verbose information during the command's execution
--store-config  Outputs the command's input parameters to a config file in the directory the command has been run in.
                The file can be later used with the :doc:`from-config<from-config>` command.
=============== ===========

.. warning::

    All the input parameters stored by the --store-config option are in plain text,
    including passwords and any other secrets.

Changelog
---------

======= ==================================================================
Version Notes
======= ==================================================================
3.0     * Added 'zato crypto create-secret-key'
        * Command 'zato check-config' extended to work with all components
1.0     Added initially
======= ==================================================================
